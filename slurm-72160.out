/var/spool/slurmd/job72160/slurm_script: line 11: cd: SSL_VAN: No such file or directory

----------------------------------------------------------------------------
  cuda:
----------------------------------------------------------------------------
     Versions:
        cuda/10.2
        cuda/11.0
        cuda/11.2
        cuda/11.3
        cuda/11.4
        cuda/11.5
        cuda/11.6
        cuda/11.7
        cuda/11.8
        cuda/12.0

----------------------------------------------------------------------------
  For detailed information about a specific "cuda" package (including how to load the modules) use the module's full name.
  Note that names that have a trailing (E) are extensions provided by other modules.
  For example:

     $ module spider cuda/12.0
----------------------------------------------------------------------------

 


CommandNotFoundError: Your shell has not been properly configured to use 'conda activate'.
To initialize your shell, run

    $ conda init <SHELL_NAME>

Currently supported shells are:
  - bash
  - fish
  - tcsh
  - xonsh
  - zsh
  - powershell

See 'conda init --help' for more information and options.

IMPORTANT: You may need to close and restart your shell after running 'conda init'.


/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/mmcv/__init__.py:20: UserWarning: On January 1, 2023, MMCV will release v2.0.0, in which it will remove components related to the training process and add a data transformation module. In addition, it will rename the package names mmcv to mmcv-lite and mmcv-full to mmcv. See https://github.com/open-mmlab/mmcv/blob/master/docs/en/compatibility.md for more details.
  warnings.warn(
/home/karimimonsefi.1/SSL_VAN/MSD/main.py:134: UserWarning: Found total gpus 2
  warnings.warn("Found total gpus {}".format(args.ngpus_per_node))
/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/mmcv/__init__.py:20: UserWarning: On January 1, 2023, MMCV will release v2.0.0, in which it will remove components related to the training process and add a data transformation module. In addition, it will rename the package names mmcv to mmcv-lite and mmcv-full to mmcv. See https://github.com/open-mmlab/mmcv/blob/master/docs/en/compatibility.md for more details.
  warnings.warn(
/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/mmcv/__init__.py:20: UserWarning: On January 1, 2023, MMCV will release v2.0.0, in which it will remove components related to the training process and add a data transformation module. In addition, it will rename the package names mmcv to mmcv-lite and mmcv-full to mmcv. See https://github.com/open-mmlab/mmcv/blob/master/docs/en/compatibility.md for more details.
  warnings.warn(
/home/karimimonsefi.1/SSL_VAN/MSD/main.py:154: UserWarning: 0 gpu 0
  warnings.warn(f"{args.rank} gpu {args.gpu}")
/home/karimimonsefi.1/SSL_VAN/MSD/main.py:156: UserWarning: Batch size is: 1 epochs 10 and task is Task06_Lung
  warnings.warn(f"Batch size is: {args.batch_size} epochs {args.max_epochs} and task is {args.task}")
/home/karimimonsefi.1/SSL_VAN/MSD/main.py:154: UserWarning: 1 gpu 1
  warnings.warn(f"{args.rank} gpu {args.gpu}")
/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/monai/transforms/post/array.py:176: UserWarning: `to_onehot=True/False` is deprecated, please use `to_onehot=num_classes` instead.
  warnings.warn("`to_onehot=True/False` is deprecated, please use `to_onehot=num_classes` instead.")
/home/karimimonsefi.1/SSL_VAN/MSD/main.py:198: UserWarning: Total parameters count 62187296
  warnings.warn(f"Total parameters count {pytorch_total_params}")
/home/karimimonsefi.1/SSL_VAN/MSD/main.py:201: UserWarning: Total args.checkpoint True
  warnings.warn(f"Total args.checkpoint {args.checkpoint}")
/home/karimimonsefi.1/SSL_VAN/commons/util.py:6: UserWarning:  base_url is 64-128-256-512_3-4-6-3_8-8-4-4_vae_inferer_valid_loader_SwinUNETR48_Task06_Lung
  warnings.warn(f" base_url is {base_url}")
/home/karimimonsefi.1/SSL_VAN/commons/util.py:8: UserWarning:  output_url 1 is ./runs/MSD_new/test_log/output_True_False
  warnings.warn(f" output_url 1 is {output_url}")
/home/karimimonsefi.1/SSL_VAN/commons/util.py:9: UserWarning:  exists 1 is True
  warnings.warn(f" exists 1 is {os.path.exists(output_url)}")
/home/karimimonsefi.1/SSL_VAN/commons/util.py:13: UserWarning:  output_url 2 is ./runs/MSD_new/test_log/output_True_False/64-128-256-512_3-4-6-3_8-8-4-4_vae_inferer_valid_loader_SwinUNETR48_Task06_Lung
  warnings.warn(f" output_url 2 is {output_url}")
/home/karimimonsefi.1/SSL_VAN/commons/util.py:14: UserWarning:  exists 2 is False
  warnings.warn(f" exists 2 is {os.path.exists(output_url)}")
/home/karimimonsefi.1/SSL_VAN/commons/util.py:20: UserWarning:  Best url model is 64-128-256-512_3-4-6-3_8-8-4-4_vae_inferer_valid_loader_SwinUNETR48_Task06_Lung__best.pt, final model url is 64-128-256-512_3-4-6-3_8-8-4-4_vae_inferer_valid_loader_SwinUNETR48_Task06_Lung__final.pt
  warnings.warn(f" Best url model is {args.best_model_url}, final model url is {args.final_model_url}")
/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/monai/transforms/post/array.py:176: UserWarning: `to_onehot=True/False` is deprecated, please use `to_onehot=num_classes` instead.
  warnings.warn("`to_onehot=True/False` is deprecated, please use `to_onehot=num_classes` instead.")
/home/karimimonsefi.1/SSL_VAN/MSD/main.py:198: UserWarning: Total parameters count 62187296
  warnings.warn(f"Total parameters count {pytorch_total_params}")
/home/karimimonsefi.1/SSL_VAN/MSD/main.py:201: UserWarning: Total args.checkpoint True
  warnings.warn(f"Total args.checkpoint {args.checkpoint}")
/home/karimimonsefi.1/SSL_VAN/commons/util.py:6: UserWarning:  base_url is 64-128-256-512_3-4-6-3_8-8-4-4_vae_inferer_valid_loader_SwinUNETR48_Task06_Lung
  warnings.warn(f" base_url is {base_url}")
/home/karimimonsefi.1/SSL_VAN/commons/util.py:8: UserWarning:  output_url 1 is ./runs/MSD_new/test_log/output_True_False
  warnings.warn(f" output_url 1 is {output_url}")
/home/karimimonsefi.1/SSL_VAN/commons/util.py:9: UserWarning:  exists 1 is True
  warnings.warn(f" exists 1 is {os.path.exists(output_url)}")
/home/karimimonsefi.1/SSL_VAN/commons/util.py:13: UserWarning:  output_url 2 is ./runs/MSD_new/test_log/output_True_False/64-128-256-512_3-4-6-3_8-8-4-4_vae_inferer_valid_loader_SwinUNETR48_Task06_Lung
  warnings.warn(f" output_url 2 is {output_url}")
/home/karimimonsefi.1/SSL_VAN/commons/util.py:14: UserWarning:  exists 2 is True
  warnings.warn(f" exists 2 is {os.path.exists(output_url)}")
/home/karimimonsefi.1/SSL_VAN/commons/util.py:20: UserWarning:  Best url model is 64-128-256-512_3-4-6-3_8-8-4-4_vae_inferer_valid_loader_SwinUNETR48_Task06_Lung__best.pt, final model url is 64-128-256-512_3-4-6-3_8-8-4-4_vae_inferer_valid_loader_SwinUNETR48_Task06_Lung__final.pt
  warnings.warn(f" Best url model is {args.best_model_url}, final model url is {args.final_model_url}")
/home/karimimonsefi.1/SSL_VAN/MSD/main.py:215: UserWarning: => loaded checkpoint 'True' (epoch 609) (bestacc 0.7650843262672424)
  warnings.warn("=> loaded checkpoint '{}' (epoch {}) (bestacc {})".format(
/home/karimimonsefi.1/SSL_VAN/MSD/main.py:215: UserWarning: => loaded checkpoint 'True' (epoch 609) (bestacc 0.7650843262672424)
  warnings.warn("=> loaded checkpoint '{}' (epoch {}) (bestacc {})".format(
/home/karimimonsefi.1/SSL_VAN/MSD/tester.py:36: UserWarning: Test 0/16  time 44.30s
  warnings.warn("Test {}/{}  time {:.2f}s".format(idx, len(loader), time.time() - start_time))
/home/karimimonsefi.1/SSL_VAN/MSD/tester.py:36: UserWarning: Test 1/16  time 8.58s
  warnings.warn("Test {}/{}  time {:.2f}s".format(idx, len(loader), time.time() - start_time))
/home/karimimonsefi.1/SSL_VAN/MSD/tester.py:36: UserWarning: Test 2/16  time 13.63s
  warnings.warn("Test {}/{}  time {:.2f}s".format(idx, len(loader), time.time() - start_time))
/home/karimimonsefi.1/SSL_VAN/MSD/tester.py:36: UserWarning: Test 3/16  time 10.55s
  warnings.warn("Test {}/{}  time {:.2f}s".format(idx, len(loader), time.time() - start_time))
/home/karimimonsefi.1/SSL_VAN/MSD/tester.py:36: UserWarning: Test 4/16  time 8.97s
  warnings.warn("Test {}/{}  time {:.2f}s".format(idx, len(loader), time.time() - start_time))
/home/karimimonsefi.1/SSL_VAN/MSD/tester.py:36: UserWarning: Test 5/16  time 13.66s
  warnings.warn("Test {}/{}  time {:.2f}s".format(idx, len(loader), time.time() - start_time))
/home/karimimonsefi.1/SSL_VAN/MSD/tester.py:36: UserWarning: Test 6/16  time 8.98s
  warnings.warn("Test {}/{}  time {:.2f}s".format(idx, len(loader), time.time() - start_time))
/home/karimimonsefi.1/SSL_VAN/MSD/tester.py:36: UserWarning: Test 7/16  time 11.76s
  warnings.warn("Test {}/{}  time {:.2f}s".format(idx, len(loader), time.time() - start_time))
/home/karimimonsefi.1/SSL_VAN/MSD/tester.py:36: UserWarning: Test 8/16  time 6.64s
  warnings.warn("Test {}/{}  time {:.2f}s".format(idx, len(loader), time.time() - start_time))
/home/karimimonsefi.1/SSL_VAN/MSD/tester.py:36: UserWarning: Test 9/16  time 6.63s
  warnings.warn("Test {}/{}  time {:.2f}s".format(idx, len(loader), time.time() - start_time))
/home/karimimonsefi.1/SSL_VAN/MSD/tester.py:36: UserWarning: Test 10/16  time 18.83s
  warnings.warn("Test {}/{}  time {:.2f}s".format(idx, len(loader), time.time() - start_time))
torch.Size([1, 14, 340, 340, 270])
torch.Size([1, 14, 430, 430, 374])
torch.Size([1, 14, 384, 384, 298])
torch.Size([1, 14, 406, 406, 332])
torch.Size([1, 14, 400, 400, 305])
torch.Size([1, 14, 460, 460, 336])
torch.Size([1, 14, 400, 400, 314])
torch.Size([1, 14, 461, 461, 325])
torch.Size([1, 14, 394, 394, 396])
torch.Size([1, 14, 400, 400, 170])
torch.Size([1, 14, 382, 382, 272])
torch.Size([1, 14, 412, 412, 374])
torch.Size([1, 14, 360, 360, 305])
torch.Size([1, 14, 342, 342, 301])
torch.Size([1, 14, 389, 389, 354])
torch.Size([1, 14, 358, 358, 313])
torch.Size([1, 14, 420, 420, 304])
torch.Size([1, 14, 336, 336, 321])
torch.Size([1, 14, 318, 318, 296])
torch.Size([1, 14, 440, 440, 363])
Traceback (most recent call last):
  File "/home/karimimonsefi.1/SSL_VAN/MSD/main.py", line 269, in <module>
    main()
  File "/home/karimimonsefi.1/SSL_VAN/MSD/main.py", line 136, in main
    mp.spawn(main_worker, nprocs=args.ngpus_per_node, args=(args,))
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/torch/multiprocessing/spawn.py", line 240, in spawn
    return start_processes(fn, args, nprocs, join, daemon, start_method='spawn')
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/torch/multiprocessing/spawn.py", line 198, in start_processes
    while not context.join():
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/torch/multiprocessing/spawn.py", line 160, in join
    raise ProcessRaisedException(msg, error_index, failed_process.pid)
torch.multiprocessing.spawn.ProcessRaisedException: 

-- Process 1 terminated with the following error:
Traceback (most recent call last):
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/torch/multiprocessing/spawn.py", line 69, in _wrap
    fn(i, *args)
  File "/home/karimimonsefi.1/SSL_VAN/MSD/main.py", line 228, in main_worker
    accuracy = run_testing(
  File "/home/karimimonsefi.1/SSL_VAN/MSD/tester.py", line 49, in run_testing
    res = test_eval(
  File "/home/karimimonsefi.1/SSL_VAN/MSD/tester.py", line 28, in test_eval
    logits = model_inferer(data)
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/monai/inferers/utils.py", line 176, in sliding_window_inference
    seg_prob_out = predictor(window_data, *args, **kwargs)  # batched patch segmentation
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/monai/networks/nets/swin_unetr.py", line 280, in forward
    hidden_states_out = self.swinViT(x_in, self.normalize)
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/monai/networks/nets/swin_unetr.py", line 971, in forward
    x1 = self.layers1[0](x0.contiguous())
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/monai/networks/nets/swin_unetr.py", line 841, in forward
    x = blk(x, attn_mask)
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/monai/networks/nets/swin_unetr.py", line 653, in forward
    x = self.forward_part1(x, mask_matrix)
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/monai/networks/nets/swin_unetr.py", line 591, in forward_part1
    attn_windows = self.attn(x_windows, mask=attn_mask)
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/karimimonsefi.1/miniconda3/lib/python3.9/site-packages/monai/networks/nets/swin_unetr.py", line 480, in forward
    attn = attn + relative_position_bias.unsqueeze(0)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 1.80 GiB (GPU 1; 39.42 GiB total capacity; 35.83 GiB already allocated; 649.06 MiB free; 37.19 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF

